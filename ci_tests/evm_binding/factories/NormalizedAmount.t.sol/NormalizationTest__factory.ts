/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NormalizationTest,
  NormalizationTestInterface,
} from "../../NormalizedAmount.t.sol/NormalizationTest";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testAddOperatorDecimalsNotEqualNoRevert",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "testAddOperatorDecimalsNotEqualRevert",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testAddOperatorNonZero",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "testAddOperatorZero",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "testDifferentDecimals",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testNormalizationRoundTrip",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testSubOperatorNonZero",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "testSubOperatorOverflow",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testSubOperatorZero",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AmountTooLarge",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NumberOfDecimalsNotEqual",
    inputs: [
      {
        name: "decimals",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "decimalsOther",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
] as const;

const _bytecode =
  "0x6080806040523461002d57600160ff1981816007541617600755600b541617600b55611cda90816100338239f35b600080fdfe608080604052600436101561001357600080fd5b60009081803560e01c918263060da6e61461151857505080631ed7831c146114995780632ade38801461120d57806332962b7a146110195780633841c23d14610f635780633e5e3c2314610ee45780633f7286f414610e65578063477e93e214610d695780634e2aa78f14610ca357806366d9a9a014610b265780637cbbaee514610a2d57806385226c8114610904578063916a17c6146106a957806394726d8f1461057d578063b5508aa914610440578063ba414fa61461041b578063d05168831461030d578063dd0cd1e0146101b3578063e20c9f71146101245763fa7626d4146100ff57600080fd5b34610121578060031936011261012157602060ff600754166040519015158152f35b80fd5b5034610121578060031936011261012157604051601380548083529083526020808301937f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09092915b8282106101935761018f8561018381890382611729565b6040519182918261154c565b0390f35b83546001600160a01b03168652948501946001938401939091019061016c565b50346101215780600319360112610121576040516101d0816116e5565b60128152602091600a83830152604051926101ea846116e5565b60088085528082860152825b60ff80821660028110156103095761021982610212838a611adf565b511661186b565b600590808202918204036102f5576102416102739184610239858c611adf565b511690611941565b600087604051610250816116e5565b828152015260405190610262826116e5565b630bebc20082528688830152611b6c565b9161028981610282848c611adf565b5116611b06565b91600792808402938404036102e157926102d7926102d2926102af6102dc97968d611adf565b51166001600160401b03604051926102c6846116e5565b16825288820152611b3a565b611b1d565b611ace565b6101f6565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b8580f35b503461012157806003193601126101215760405161032a816116e5565b6012815260209060038282015260405191610344836116e5565b60088352600381840152835b60ff8082169060028210156104175761036d816102128488611adf565b9060059180830290838204036104035761038f6103aa9183610239878b611adf565b6103a48361039d878b611adf565b51166118c4565b90611c39565b926103b982610282838b611adf565b8084029384040361040357926102d7926102d2926103db6103fe97968b611adf565b51166001600160401b03604051926103f2846116e5565b16825287820152611b3a565b610350565b634e487b7160e01b89526011600452602489fd5b8680f35b50346101215780600319360112610121576020610436611789565b6040519015158152f35b503461012157806003193601126101215760175461045d81611854565b61046a6040519182611729565b81815260209182820160176000527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15906000905b8382106104b3576040518061018f878261166b565b60405160009184549160019280841c908481168015610573575b8b8310811461055f578284528b949392918115610543575060011461050a575b506104fc816001960382611729565b81520193019101909161049e565b60008881528481209650905b80821061052c57508101830194506104fc6104ed565b8654838301860152958501958b9490910190610516565b60ff19168584015250151560051b8101830194506104fc6104ed565b634e487b7160e01b87526022600452602487fd5b91607f16916104cd565b503461012157806003193601126101215760405161059a816116e5565b6012815260036020820152815b60ff908181169160028310156106a5576105c5816102128587611adf565b9060059180830292830403610691576105e2816102128688611adf565b91600692808402938404036102f5579061023961060861060f949383610239898b611adf565b9587611adf565b9184737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1561068d57818091600460405180948193633d21120560e21b83525af180156106825761066a575b50506106659261065f91611c39565b50611ace565b6105a7565b61067390611716565b61067e578438610650565b8480fd5b6040513d84823e3d90fd5b5080fd5b634e487b7160e01b86526011600452602486fd5b8480f35b5034610121578060031936011261012157601a546106c681611854565b906106d46040519283611729565b808252601a8352827f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e602084015b838310610717576040518061018f87826115b3565b604051610723816116e5565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b81600784011061089657846001979460029794602097946107ae94549181811061087a575b81811061085e575b818110610842575b818110610826575b81811061080a575b8181106107ee575b8181106107d4575b106107c0575b500382611729565b83820152815201920192019190610702565b6001600160e01b03191681528601386107a6565b828a1b6001600160e01b0319168452928901928b016107a0565b604083901b6001600160e01b0319168452928901928b01610798565b606083901b6001600160e01b0319168452928901928b01610790565b608083901b6001600160e01b0319168452928901928b01610788565b60a083901b6001600160e01b0319168452928901928b01610780565b60c083901b6001600160e01b0319168452928901928b01610778565b60e083901b6001600160e01b0319168452928901928b01610770565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e082015201940192019161074b565b503461012157806003193601126101215760185461092181611854565b61092e6040519182611729565b81815260209182820160186000527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e906000905b838210610977576040518061018f878261166b565b60405160009184549160019280841c908481168015610a23575b8b8310811461055f578284528b949392918115610a0757506001146109ce575b506109c0816001960382611729565b815201930191019091610962565b60008881528481209650905b8082106109f057508101830194506109c06109b1565b8654838301860152958501958b94909101906109da565b60ff19168584015250151560051b8101830194506109c06109b1565b91607f1691610991565b5034610121578060031936011261012157604051610a4a816116e5565b6012815260209160038383015260405192610a64846116e5565b60088452600381850152815b60ff80821660028110156106a557610a8c826102128389611adf565b6005908082029182040361069157610aa883610212848a611adf565b906001600160ff1b03821682036102f55790610ae6610acf610aec9386610239878d611adf565b9185610adb868c611adf565b51169060011b611941565b90611b6c565b91610afb81610282848b611adf565b91600792808402938404036102f557926102d7926102d2926103db610b2197968c611adf565b610a70565b5034610121578060031936011261012157601954610b4381611854565b90610b516040519283611729565b80825260198352827f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695602084015b838310610b94576040518061018f87826115b3565b604051610ba0816116e5565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b816007840110610c355784600197946002979460209794610c2394549181811061087a5781811061085e57818110610842578181106108265781811061080a578181106107ee578181106107d457106107c057500382611729565b83820152815201920192019190610b7f565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e0820152019401920191610bc8565b5034610121578060031936011261012157604051610cc0816116e5565b6012815260209060038282015260405191610cda836116e5565b60088352600381840152835b60ff80821690600282101561041757610d03816102128488611adf565b90600591808302908382040361040357610d25610d339183610239878b611adf565b610ae68361039d878b611adf565b92610d4282610282838b611adf565b8084029384040361040357926102d7926102d2926103db610d6497968b611adf565b610ce6565b5034610121578060031936011261012157604051610d86816116e5565b60128152600360208181840152604051610d9f816116e5565b600881528282820152845b60ff8082166002811015610e6157610dc682610212838a611adf565b6005908082029182040361040357610de283610212848b611adf565b906001600160ff1b0382168203610e4d57906103a4610e09610e159386610239878e611adf565b9185610adb868d611adf565b91610e24816102828488611adf565b918288029288840403610e4d57926102d7926102d2926102af610e48979689611adf565b610daa565b634e487b7160e01b8a52601160045260248afd5b8780f35b5034610121578060031936011261012157604051601580548083529083526020808301937f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47592915b828210610ec45761018f8561018381890382611729565b83546001600160a01b031686529485019460019384019390910190610ead565b5034610121578060031936011261012157604051601680548083529083526020808301937fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428992915b828210610f435761018f8561018381890382611729565b83546001600160a01b031686529485019460019384019390910190610f2c565b5034610121578060031936011261012157610f7c611892565b90806020604051610f8c816116e5565b8281520152604051610f9d816116e5565b6107d0815260036020820152737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1561101557828091600460405180948193633d21120560e21b83525af1801561100a57610ff7575b50610ff39192611b6c565b5080f35b91611004610ff393611716565b91610fe8565b6040513d85823e3d90fd5b8280fd5b5034610121578060031936011261012157611032611892565b6001600160401b03906110518282511660ff60208094015116906119ca565b624c4b40818103611060578480f35b60809182917f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50836040518781526022888201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b6060820152a16040519060408252600a6040830152690808080808081319599d60b21b6060830152858201527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8938491a16040519060408252600a6040830152690808080808149a59da1d60b21b606083015284820152a1737109709ecfa91a80626ff3989d68f67f5b1dd12d91823b61116e575b50505061010061ff00196007541617600755388080808480f35b604051918201918383526519985a5b195960d21b604082015260016060820152606081526080810191818310908311176111f9579184826111e3602483979596849760405260a08101956370ca10bb60e01b87526111d38251809260a4850190611590565b8101036004810184520182611729565b51925af1506111f061174a565b50388080611154565b634e487b7160e01b85526041600452602485fd5b5034610121578060031936011261012157601b549061122b82611854565b6112386040519182611729565b828152602081018093601b84527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc184925b82841061135157858588604051916020830190602084525180915260408301600590604083831b860101939580925b8484106112a55786860387f35b9091929394603f198782030184528751906020604082019260018060a01b03815116835201519160406020830152825180915260609060208284019282871b850101940192865b82811061130f575050505050602080600192990194019401929694939190611298565b909192939460208080600193605f19878203018952895161133b81518092818552858086019101611590565b601f01601f1916010197019501939291016112ec565b60405161135d816116e5565b82546001600160a01b031681526001830180549061137a82611854565b916113886040519384611729565b80835260208301918a5260208a208a925b8284106113bf575050505060019282602092836002950152815201920193019290611269565b60405182548d90600181811c919081161561148f575b60208210600182161461147a578184528f919060018116908115611455575060011461141f575b50506001928261141185946020940382611729565b815201920193019290611399565b909150848252602082205b81831061143f57505081016020018d826113fc565b600181602092548386880101520192019161142a565b60ff191660208681019190915291151560051b850190910192508f91508390506113fc565b50634e487b7160e01b8f52602260045260248ffd5b90607f16906113d5565b5034610121578060031936011261012157604051601480548083529083526020808301937fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec92915b8282106114f85761018f8561018381890382611729565b83546001600160a01b0316865294850194600193840193909101906114e1565b819034611549578160031936011261154957806115366020926116e5565b82815201526115466040516116e5565b80f35b50fd5b6020908160408183019282815285518094520193019160005b828110611573575050505090565b83516001600160a01b031685529381019392810192600101611565565b60005b8381106115a35750506000910152565b8181015183820152602001611593565b602080820190808352835180925260409283810182858560051b840101960194600080935b8685106115ea57505050505050505090565b909192939480969798603f198382030186528951826060818885019360018060a01b038151168652015193888382015284518094520192019085905b8082106116475750505090806001929a0195019501939695949291906115d8565b82516001600160e01b03191684528a94938401939092019160019190910190611626565b602080820190808352835180925260408301928160408460051b8301019501936000915b84831061169f5750505050505090565b909192939495848080600193603f198682030187528a516116cb81518092818552858086019101611590565b601f01601f1916010198019695949190910192019061168f565b604081019081106001600160401b0382111761170057604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161170057604052565b90601f801991011681019081106001600160401b0382111761170057604052565b3d15611784573d906001600160401b0382116117005760405191611778601f8201601f191660200184611729565b82523d6000602084013e565b606090565b60075460081c60ff16156117a35760ff60075460081c1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d803b6117c4575090565b60408051602081018381526519985a5b195960d21b8284015291815260608101906001600160401b038211818310176111f95791848261182860248397959684976040526080810195630667f9d760e41b87526111d3825180926084850190611590565b51925af15061183561174a565b60208180518101031261068d5760200151908115158203610121575090565b6001600160401b0381116117005760051b60200190565b60ff16604d811161187c57600a0a90565b634e487b7160e01b600052601160045260246000fd5b600060206040516118a2816116e5565b82815201526040516118b3816116e5565b631dcd650081526008602082015290565b600060206040516118d4816116e5565b828152015260ff811660081015611937576118f160088092611a41565b906001600160401b039081831161191e5760ff9160405193611912856116e5565b16835216602082015290565b6040516304041d9560e11b815260006004820152602490fd5b6118f18180611a41565b9060006020604051611952816116e5565b828152015260ff8116600810156119ac57611971600880925b84611a96565b916001600160401b039081841161199457509060ff9160405193611912856116e5565b602490604051906304041d9560e11b82526004820152fd5b611971818061196b565b9060ff8091169116039060ff821161187c57565b9060ff1660068114611a3d576006811115611a15576005190160ff811161187c576119f49061186b565b9081156119ff570490565b634e487b7160e01b600052601260045260246000fd5b60060360ff811161187c57611a299061186b565b9081810291818304149015171561187c5790565b5090565b60ff821660ff8216818114611a8d571115611a7257611a6891611a63916119b6565b61186b565b156119ff57600090565b611a6390611a7f926119b6565b156001171561187c57600090565b50505050600090565b919060ff821660ff8216818114611ac7571115611aba576119f491611a63916119b6565b611a6390611a29926119b6565b5050505090565b60ff1660ff811461187c5760010190565b906002811015611af05760051b0190565b634e487b7160e01b600052603260045260246000fd5b6001600160401b0316604d811161187c57600a0a90565b15611b2457565b634e487b7160e01b600052600160045260246000fd5b906001600160401b038083511690825116149182611b5757505090565b60ff8092935060208092015116920151161490565b60006020604051611b7c816116e5565b8281520152611b8a81611c16565b611a3d57611b9782611c16565b611c1157602081019160ff83511660ff60208301511690818103611bee5750506001600160401b038080935116915116019181831161187c5760ff9051169060405192611be3846116e5565b168252602082015290565b604051635ce6db6160e11b815260ff918216600482015291166024820152604490fd5b905090565b6001600160401b03815116159081611c2c575090565b60ff915060200151161590565b60006020604051611c49816116e5565b8281520152611c5782611c16565b611c1157602081019160ff83511660ff60208301511690818103611bee5750506001600160401b03808093511691511690039181831161187c5760ff9051169060405192611be3846116e556fea2646970667358221220b61e826b95e2a38ffe4c0ba8180b5cc7304559d4e58ddc526a3e210226ecbb0f64736f6c63430008130033";

type NormalizationTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NormalizationTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NormalizationTest__factory extends ContractFactory {
  constructor(...args: NormalizationTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<NormalizationTest> {
    return super.deploy(overrides || {}) as Promise<NormalizationTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NormalizationTest {
    return super.attach(address) as NormalizationTest;
  }
  override connect(signer: Signer): NormalizationTest__factory {
    return super.connect(signer) as NormalizationTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NormalizationTestInterface {
    return new utils.Interface(_abi) as NormalizationTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NormalizationTest {
    return new Contract(address, _abi, signerOrProvider) as NormalizationTest;
  }
}
