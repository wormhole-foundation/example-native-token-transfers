/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockERC721,
  MockERC721Interface,
} from "../../MockERC721.sol/MockERC721";

const _abi = [
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_symbol",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610ec9908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610a8d5750816306fdde03146109e5578163081812fc146109b3578163095ea7b3146108fe57816323b872dd146108e657816342842e0e146108275781634cd88b76146104ec5781636352211e1461047e57816370a082311461040b57816395d89b4114610324578163a22cb4651461029f578163b88d4fde1461016c57508063c87b56dd1461010f5763e985e9c5146100bf57600080fd5b3461010b578060031936011261010b5760ff816020936100dd610baa565b6100e5610bc5565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b503461010b5760208060031936011261016857918151928391818352606051918281850152815b838110610153575050828201840152601f01601f19168101030190f35b60808101518782018701528694508101610136565b8280fd5b90503461016857608036600319011261016857610187610baa565b91610190610bc5565b916044359260643567ffffffffffffffff811161029b573660238201121561029b576101c59036906024818601359101610c10565b906101d1858288610cb2565b803b15948786156101e9575b6101e687610e54565b80f35b602094965085976102319651809781968295630a85bd0160e11b9b8c8552339085015260018060a01b0380951660248501526044840152608060648401526084830190610b6a565b0393165af190811561028e576101e693508491610260575b506001600160e01b031916143880808080876101dd565b610281915060203d8111610287575b6102798183610b32565b810190610e34565b38610249565b503d61026f565b50505051903d90823e3d90fd5b8680fd5b50503461010b578060031936011261010b576102b9610baa565b90602435908115158092036103205733845260056020528084209260018060a01b03169283855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b8380fd5b50503461010b578160031936011261010b5780519082600180549161034883610af8565b808652928281169081156103e35750600114610387575b50505061037182610383940383610b32565b51918291602083526020830190610b6a565b0390f35b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8286106103cb57505050610371826020610383958201019461035f565b805460208787018101919091529095019481016103ae565b61038397508693506020925061037194915060ff191682840152151560051b8201019461035f565b8391503461010b57602036600319011261010b576001600160a01b0361042f610baa565b1690811561044c5760208480858581526003845220549051908152f35b606490602085519162461bcd60e51b8352820152600c60248201526b5a45524f5f4144445245535360a01b6044820152fd5b905082346104e95760203660031901126104e957813581526002602052829020546001600160a01b03169081156104b9575060209151908152f35b606490602084519162461bcd60e51b8352820152600a6024820152691393d517d3525395115160b21b6044820152fd5b80fd5b8391503461010b578260031936011261010b5767ffffffffffffffff81358181116103205761051e9036908401610c57565b91602435828111610823576105369036908301610c57565b9460ff600654166107ea575082518281116107d757806105568654610af8565b94601f9586811161076c575b506020908683116001146106eb5787926106e0575b50508160011b916000199060031b1c19161784555b84519182116106cd57506001916105a38354610af8565b81811161066b575b5060209082116001146105f0578394829394926105e5575b5050600019600383901b1c191690821b1781555b60ff19600654161760065580f35b0151905084806105c3565b8284527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690601f198316855b818110610655575095838596971061063c575b505050811b0181556105d7565b015160001960f88460031b161c1916905584808061062f565b878301518455928501926020928301920161061c565b8385527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68280850160051c820192602086106106c4575b0160051c019084905b8281106106b95750506105ab565b8681550184906106ab565b925081926106a2565b634e487b7160e01b845260419052602483fd5b015190508780610577565b8780527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639250601f198416885b818110610754575090846001959493921061073b575b505050811b01845561058c565b015160001960f88460031b161c1916905587808061072e565b92936020600181928786015181550195019301610718565b9091508680527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638680850160051c820192602086106107ce575b9085949392910160051c01905b8181106107c05750610562565b8881558493506001016107b3565b925081926107a6565b634e487b7160e01b855260418252602485fd5b906020606492519162461bcd60e51b835282015260136024820152721053149150511657d253925512505312569151606a1b6044820152fd5b8480fd5b9050346101685761083736610bdb565b929190610845848284610cb2565b803b1593841561085a575b866101e686610e54565b60209293945060a4908787519586948593630a85bd0160e11b998a8652339086015260018060a01b038093166024860152604485015260806064850152826084850152165af190811561028e576101e6935084916108c8575b506001600160e01b0319161438808080610850565b6108e0915060203d8111610287576102798183610b32565b386108b3565b83346104e9576101e66108f836610bdb565b91610cb2565b905034610168578160031936011261016857610918610baa565b602435808552600260205283852054909391926001600160a01b0391821692903384148015610994575b61094b90610c75565b8587526020528520921691826bffffffffffffffffffffffff60a01b8254161790557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b508387526005602090815282882033895290528187205460ff16610942565b90503461016857602036600319011261016857803583526020908152918190205490516001600160a01b039091168152f35b50503461010b578160031936011261010b57805190828054610a0681610af8565b808552916001918083169081156103e35750600114610a315750505061037182610383940383610b32565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828610610a7557505050610371826020610383958201019461035f565b80546020878701810191909152909501948101610a58565b849134610168576020366003190112610168573563ffffffff60e01b811680910361016857602092506301ffc9a760e01b8114908115610ae7575b8115610ad6575b5015158152f35b635b5e139f60e01b14905083610acf565b6380ac58cd60e01b81149150610ac8565b90600182811c92168015610b28575b6020831014610b1257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610b07565b90601f8019910116810190811067ffffffffffffffff821117610b5457604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610b96575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b75565b600435906001600160a01b0382168203610bc057565b600080fd5b602435906001600160a01b0382168203610bc057565b6060906003190112610bc0576001600160a01b03906004358281168103610bc057916024359081168103610bc0579060443590565b92919267ffffffffffffffff8211610b545760405191610c3a601f8201601f191660200184610b32565b829481845281830111610bc0578281602093846000960137010152565b9080601f83011215610bc057816020610c7293359101610c10565b90565b15610c7c57565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b6000838152600260209081526040808320546001600160a01b0395948616949086168503610e03578516948515610dcb57610cff90853314908115610dae575b8115610d98575b50610c75565b838352600382528083208054908115610d8457600019918201905585845260038352818420805490918114610d845760010190558583526002825280832080546001600160a01b0319908116871790915560049092528220805490911690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4565b634e487b7160e01b85526011600452602485fd5b9050878552600484528285205416331438610cf9565b8686526005855283862033875285528386205460ff169150610cf2565b815162461bcd60e51b81526004810184905260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b815162461bcd60e51b815260048101849052600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b90816020910312610bc057516001600160e01b031981168103610bc05790565b15610e5b57565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fdfea26469706673582212205f9d8db48a53433278114f76ac0bea348f3b7b339cdb6b96cb5fd7ae082e8bc964736f6c63430008130033";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockERC721> {
    return super.deploy(overrides || {}) as Promise<MockERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  override connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
