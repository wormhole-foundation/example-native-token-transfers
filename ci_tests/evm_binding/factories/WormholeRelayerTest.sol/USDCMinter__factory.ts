/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  USDCMinter,
  USDCMinterInterface,
} from "../../WormholeRelayerTest.sol/USDCMinter";

const _abi = [
  {
    type: "function",
    name: "configureMinter",
    inputs: [
      {
        name: "minter",
        type: "address",
        internalType: "address",
      },
      {
        name: "minterAllowedAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "masterMinter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class USDCMinter__factory {
  static readonly abi = _abi;
  static createInterface(): USDCMinterInterface {
    return new utils.Interface(_abi) as USDCMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDCMinter {
    return new Contract(address, _abi, signerOrProvider) as USDCMinter;
  }
}
