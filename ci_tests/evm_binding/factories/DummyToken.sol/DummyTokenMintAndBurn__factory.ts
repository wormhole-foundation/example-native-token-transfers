/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DummyTokenMintAndBurn,
  DummyTokenMintAndBurnInterface,
} from "../../DummyToken.sol/DummyTokenMintAndBurn";

const _abi = [
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "burnFrom",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decreaseAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "subtractedValue",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "increaseAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "addedValue",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mintDummy",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080346200033a576040906001600160401b03908083018281118282101762000324578352600a815260209169223ab6b6bcaa37b5b2b760b11b83830152835192848401848110838211176200032457855260049384815263222a25a760e11b828201528351908382116200030f576003928354926001968785811c9516801562000304575b83861014620002ef578190601f9586811162000299575b508390868311600114620002325760009262000226575b505060001982871b1c191690871b1784555b8151948511620002115786548681811c9116801562000206575b82821014620001f157838111620001a6575b50809285116001146200013857509383949184926000956200012c575b50501b92600019911b1c19161790555b51610ba89081620003408239f35b0151935038806200010e565b92919084601f1981168860005285600020956000905b898383106200018b575050501062000170575b50505050811b0190556200011e565b01519060f884600019921b161c191690553880808062000161565b8587015189559097019694850194889350908101906200014e565b87600052816000208480880160051c820192848910620001e7575b0160051c019087905b828110620001da575050620000f1565b60008155018790620001ca565b92508192620001c1565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000df565b604187634e487b7160e01b6000525260246000fd5b015190503880620000b3565b90899350601f1983169188600052856000209260005b8782821062000282575050841162000269575b505050811b018455620000c5565b015160001983891b60f8161c191690553880806200025b565b8385015186558d9790950194938401930162000248565b90915086600052836000208680850160051c820192868610620002e5575b918b91869594930160051c01915b828110620002d55750506200009c565b600081558594508b9101620002c5565b92508192620002b7565b602289634e487b7160e01b6000525260246000fd5b94607f169462000085565b604186634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146106ca57508163095ea7b3146106a057816318160ddd1461068157816323b872dd146105b7578163313ce5671461059b578163395093511461054b57816340c10f191461042f57816342966c681461043457816356aba69c1461042f57816370a08231146103f857816379cc67901461038a57816395d89b411461026b5781639dc29fac146101f8578163a457c2d71461015057508063a9059cbb146101205763dd62ed3e146100d557600080fd5b3461011c578060031936011261011c57806020926100f16107eb565b6100f9610806565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b503461011c578060031936011261011c5760209061014961013f6107eb565b6024359033610902565b5160018152f35b905082346101f557826003193601126101f55761016b6107eb565b918360243592338152600160205281812060018060a01b03861682526020522054908282106101a4576020856101498585038733610a70565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b905082346101f557826003193601126101f5575060206084926102196107eb565b505162461bcd60e51b815291820152602b60248201527f4c6f636b696e67206e74744d616e616765722073686f756c64206e6f7420636160448201526a6c6c20276275726e28292760a81b6064820152fd5b83833461011c578160031936011261011c57805190828454600181811c90808316928315610380575b602093848410811461036d5783885290811561035157506001146102fc575b505050829003601f01601f191682019267ffffffffffffffff8411838510176102e957508291826102e59252826107a2565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061033d57505050508301018580806102b3565b805488860183015293019284908201610327565b60ff1916878501525050151560051b84010190508580806102b3565b634e487b7160e01b895260228a52602489fd5b91607f1691610294565b905082346101f557826003193601126101f5575060206084926103ab6107eb565b505162461bcd60e51b815291820152602660248201527f4e6f206e74744d616e616765722073686f756c642063616c6c20276275726e46604482015265726f6d28292760d01b6064820152fd5b50503461011c57602036600319011261011c5760209181906001600160a01b036104206107eb565b16815280845220549051908152f35b61081c565b9190503461054757602090816003193601126105435782359233156104f85733855284835281852054908482106104aa5750917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef918486959433875286845203818620558360025403600255519283523392a380f35b825162461bcd60e51b8152908101849052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b82608492519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b8380fd5b8280fd5b50503461011c578060031936011261011c5761014960209261059461056e6107eb565b338352600186528483206001600160a01b038216845286529184902054602435906108df565b9033610a70565b50503461011c578160031936011261011c576020905160128152f35b8391503461011c57606036600319011261011c576105d36107eb565b6105db610806565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610615575b602086610149878787610902565b84821061063e57509183916106336020969561014995033383610a70565b919394819350610607565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461011c578160031936011261011c576020906002549051908152f35b50503461011c578060031936011261011c576020906101496106c06107eb565b6024359033610a70565b8490843461054757826003193601126105475782600354600181811c90808316928315610798575b602093848410811461036d57838852908115610351575060011461074257505050829003601f01601f191682019267ffffffffffffffff8411838510176102e957508291826102e59252826107a2565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061078457505050508301018580806102b3565b80548886018301529301928490820161076e565b91607f16916106f2565b6020808252825181830181905290939260005b8281106107d757505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016107b5565b600435906001600160a01b038216820361080157565b600080fd5b602435906001600160a01b038216820361080157565b34610801576040366003190112610801576108356107eb565b602435906001600160a01b0316801561089a57816108576020936002546108df565b6002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b919082018092116108ec57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610a1d57169182156109cc5760008281528060205260408120549180831061097857604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610b215716918215610ad15760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220c45cd25f1fee0822570ab1de95b1da5b7429ea57703435d23e0414cc2a318c8e64736f6c63430008130033";

type DummyTokenMintAndBurnConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyTokenMintAndBurnConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyTokenMintAndBurn__factory extends ContractFactory {
  constructor(...args: DummyTokenMintAndBurnConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DummyTokenMintAndBurn> {
    return super.deploy(overrides || {}) as Promise<DummyTokenMintAndBurn>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DummyTokenMintAndBurn {
    return super.attach(address) as DummyTokenMintAndBurn;
  }
  override connect(signer: Signer): DummyTokenMintAndBurn__factory {
    return super.connect(signer) as DummyTokenMintAndBurn__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyTokenMintAndBurnInterface {
    return new utils.Interface(_abi) as DummyTokenMintAndBurnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyTokenMintAndBurn {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DummyTokenMintAndBurn;
  }
}
