/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IWormholeRelayer,
  IWormholeRelayerInterface,
} from "../../IWormholeRelayer.sol/IWormholeRelayer";

const _abi = [
  {
    type: "function",
    name: "deliver",
    inputs: [
      {
        name: "encodedVMs",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "encodedDeliveryVAA",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "relayerRefundAddress",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "deliveryOverrides",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "deliveryAttempted",
    inputs: [
      {
        name: "deliveryHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "attempted",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deliveryFailureBlock",
    inputs: [
      {
        name: "deliveryHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "blockNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deliverySuccessBlock",
    inputs: [
      {
        name: "deliveryHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "blockNumber",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDefaultDeliveryProvider",
    inputs: [],
    outputs: [
      {
        name: "deliveryProvider",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRegisteredWormholeRelayerContract",
    inputs: [
      {
        name: "chainId",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteDeliveryPrice",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "encodedExecutionParameters",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "deliveryProviderAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "nativePriceQuote",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "encodedExecutionInfo",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteEVMDeliveryPrice",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "deliveryProviderAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "nativePriceQuote",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "targetChainRefundPerGasUnused",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteEVMDeliveryPrice",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "nativePriceQuote",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "targetChainRefundPerGasUnused",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteNativeForChain",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "currentChainAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "deliveryProviderAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "targetChainAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "resend",
    inputs: [
      {
        name: "deliveryVaaKey",
        type: "tuple",
        internalType: "struct VaaKey",
        components: [
          {
            name: "chainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "emitterAddress",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "newReceiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newEncodedExecutionParameters",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "newDeliveryProviderAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "resendToEvm",
    inputs: [
      {
        name: "deliveryVaaKey",
        type: "tuple",
        internalType: "struct VaaKey",
        components: [
          {
            name: "chainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "emitterAddress",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "newReceiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newGasLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newDeliveryProviderAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "send",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "targetAddress",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "paymentForExtraReceiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "encodedExecutionParameters",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "refundChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "refundAddress",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "deliveryProviderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "vaaKeys",
        type: "tuple[]",
        internalType: "struct VaaKey[]",
        components: [
          {
            name: "chainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "emitterAddress",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "consistencyLevel",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "send",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "targetAddress",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "paymentForExtraReceiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "encodedExecutionParameters",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "refundChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "refundAddress",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "deliveryProviderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "messageKeys",
        type: "tuple[]",
        internalType: "struct MessageKey[]",
        components: [
          {
            name: "keyType",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "encodedKey",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "consistencyLevel",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "sendPayloadToEvm",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "targetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "refundChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "refundAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "sendPayloadToEvm",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "targetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "sendToEvm",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "targetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "paymentForExtraReceiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "refundChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "refundAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "deliveryProviderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "vaaKeys",
        type: "tuple[]",
        internalType: "struct VaaKey[]",
        components: [
          {
            name: "chainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "emitterAddress",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "consistencyLevel",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "sendToEvm",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "targetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "paymentForExtraReceiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "refundChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "refundAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "deliveryProviderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "messageKeys",
        type: "tuple[]",
        internalType: "struct MessageKey[]",
        components: [
          {
            name: "keyType",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "encodedKey",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "consistencyLevel",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "sendVaasToEvm",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "targetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "vaaKeys",
        type: "tuple[]",
        internalType: "struct VaaKey[]",
        components: [
          {
            name: "chainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "emitterAddress",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "sendVaasToEvm",
    inputs: [
      {
        name: "targetChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "targetAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiverValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasLimit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "vaaKeys",
        type: "tuple[]",
        internalType: "struct VaaKey[]",
        components: [
          {
            name: "chainId",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "emitterAddress",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "refundChain",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "refundAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Delivery",
    inputs: [
      {
        name: "recipientContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sourceChain",
        type: "uint16",
        indexed: true,
        internalType: "uint16",
      },
      {
        name: "sequence",
        type: "uint64",
        indexed: true,
        internalType: "uint64",
      },
      {
        name: "deliveryVaaHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "status",
        type: "uint8",
        indexed: false,
        internalType: "enum IWormholeRelayerDelivery.DeliveryStatus",
      },
      {
        name: "gasUsed",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "refundStatus",
        type: "uint8",
        indexed: false,
        internalType: "enum IWormholeRelayerDelivery.RefundStatus",
      },
      {
        name: "additionalStatusInfo",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "overridesInfo",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SendEvent",
    inputs: [
      {
        name: "sequence",
        type: "uint64",
        indexed: true,
        internalType: "uint64",
      },
      {
        name: "deliveryQuote",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "paymentForExtraReceiverValue",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

export class IWormholeRelayer__factory {
  static readonly abi = _abi;
  static createInterface(): IWormholeRelayerInterface {
    return new utils.Interface(_abi) as IWormholeRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IWormholeRelayer {
    return new Contract(address, _abi, signerOrProvider) as IWormholeRelayer;
  }
}
