/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export type NormalizedAmountStruct = {
  amount: BigNumberish;
  decimals: BigNumberish;
};

export type NormalizedAmountStructOutput = [BigNumber, number] & {
  amount: BigNumber;
  decimals: number;
};

export declare namespace TransceiverStructs {
  export type TransceiverMessageStruct = {
    sourceNttManagerAddress: BytesLike;
    recipientNttManagerAddress: BytesLike;
    nttManagerPayload: BytesLike;
    transceiverPayload: BytesLike;
  };

  export type TransceiverMessageStructOutput = [
    string,
    string,
    string,
    string
  ] & {
    sourceNttManagerAddress: string;
    recipientNttManagerAddress: string;
    nttManagerPayload: string;
    transceiverPayload: string;
  };

  export type TransceiverInitStruct = {
    transceiverIdentifier: BytesLike;
    nttManagerAddress: BytesLike;
    nttManagerMode: BigNumberish;
    tokenAddress: BytesLike;
    tokenDecimals: BigNumberish;
  };

  export type TransceiverInitStructOutput = [
    string,
    string,
    number,
    string,
    number
  ] & {
    transceiverIdentifier: string;
    nttManagerAddress: string;
    nttManagerMode: number;
    tokenAddress: string;
    tokenDecimals: number;
  };

  export type TransceiverRegistrationStruct = {
    transceiverIdentifier: BytesLike;
    transceiverChainId: BigNumberish;
    transceiverAddress: BytesLike;
  };

  export type TransceiverRegistrationStructOutput = [string, number, string] & {
    transceiverIdentifier: string;
    transceiverChainId: number;
    transceiverAddress: string;
  };

  export type NativeTokenTransferStruct = {
    amount: NormalizedAmountStruct;
    sourceToken: BytesLike;
    to: BytesLike;
    toChain: BigNumberish;
  };

  export type NativeTokenTransferStructOutput = [
    NormalizedAmountStructOutput,
    string,
    string,
    number
  ] & {
    amount: NormalizedAmountStructOutput;
    sourceToken: string;
    to: string;
    toChain: number;
  };

  export type NttManagerMessageStruct = {
    sequence: BigNumberish;
    sender: BytesLike;
    payload: BytesLike;
  };

  export type NttManagerMessageStructOutput = [BigNumber, string, string] & {
    sequence: BigNumber;
    sender: string;
    payload: string;
  };

  export type TransceiverInstructionStruct = {
    index: BigNumberish;
    payload: BytesLike;
  };

  export type TransceiverInstructionStructOutput = [number, string] & {
    index: number;
    payload: string;
  };
}

export interface TransceiverStructsInterface extends utils.Interface {
  functions: {
    "buildAndEncodeTransceiverMessage(bytes4,bytes32,bytes32,bytes,bytes)": FunctionFragment;
    "decodeTransceiverInit(bytes)": FunctionFragment;
    "decodeTransceiverRegistration(bytes)": FunctionFragment;
    "encodeNativeTokenTransfer(((uint64,uint8),bytes32,bytes32,uint16))": FunctionFragment;
    "encodeNttManagerMessage((uint64,bytes32,bytes))": FunctionFragment;
    "encodeTransceiverInit((bytes4,bytes32,uint8,bytes32,uint8))": FunctionFragment;
    "encodeTransceiverInstruction((uint8,bytes))": FunctionFragment;
    "encodeTransceiverInstructions((uint8,bytes)[])": FunctionFragment;
    "encodeTransceiverMessage(bytes4,(bytes32,bytes32,bytes,bytes))": FunctionFragment;
    "encodeTransceiverRegistration((bytes4,uint16,bytes32))": FunctionFragment;
    "nttManagerMessageDigest(uint16,(uint64,bytes32,bytes))": FunctionFragment;
    "parseNativeTokenTransfer(bytes)": FunctionFragment;
    "parseNttManagerMessage(bytes)": FunctionFragment;
    "parseTransceiverAndNttManagerMessage(bytes4,bytes)": FunctionFragment;
    "parseTransceiverInstructionChecked(bytes)": FunctionFragment;
    "parseTransceiverInstructionUnchecked(bytes,uint256)": FunctionFragment;
    "parseTransceiverInstructions(bytes,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "buildAndEncodeTransceiverMessage"
      | "decodeTransceiverInit"
      | "decodeTransceiverRegistration"
      | "encodeNativeTokenTransfer"
      | "encodeNttManagerMessage"
      | "encodeTransceiverInit"
      | "encodeTransceiverInstruction"
      | "encodeTransceiverInstructions"
      | "encodeTransceiverMessage"
      | "encodeTransceiverRegistration"
      | "nttManagerMessageDigest"
      | "parseNativeTokenTransfer"
      | "parseNttManagerMessage"
      | "parseTransceiverAndNttManagerMessage"
      | "parseTransceiverInstructionChecked"
      | "parseTransceiverInstructionUnchecked"
      | "parseTransceiverInstructions"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "buildAndEncodeTransceiverMessage",
    values: [BytesLike, BytesLike, BytesLike, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "decodeTransceiverInit",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "decodeTransceiverRegistration",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeNativeTokenTransfer",
    values: [TransceiverStructs.NativeTokenTransferStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeNttManagerMessage",
    values: [TransceiverStructs.NttManagerMessageStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeTransceiverInit",
    values: [TransceiverStructs.TransceiverInitStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeTransceiverInstruction",
    values: [TransceiverStructs.TransceiverInstructionStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeTransceiverInstructions",
    values: [TransceiverStructs.TransceiverInstructionStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeTransceiverMessage",
    values: [BytesLike, TransceiverStructs.TransceiverMessageStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeTransceiverRegistration",
    values: [TransceiverStructs.TransceiverRegistrationStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "nttManagerMessageDigest",
    values: [BigNumberish, TransceiverStructs.NttManagerMessageStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "parseNativeTokenTransfer",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "parseNttManagerMessage",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "parseTransceiverAndNttManagerMessage",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "parseTransceiverInstructionChecked",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "parseTransceiverInstructionUnchecked",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "parseTransceiverInstructions",
    values: [BytesLike, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "buildAndEncodeTransceiverMessage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decodeTransceiverInit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decodeTransceiverRegistration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeNativeTokenTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeNttManagerMessage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeTransceiverInit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeTransceiverInstruction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeTransceiverInstructions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeTransceiverMessage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeTransceiverRegistration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nttManagerMessageDigest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parseNativeTokenTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parseNttManagerMessage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parseTransceiverAndNttManagerMessage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parseTransceiverInstructionChecked",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parseTransceiverInstructionUnchecked",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parseTransceiverInstructions",
    data: BytesLike
  ): Result;

  events: {};
}

export interface TransceiverStructs extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TransceiverStructsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    buildAndEncodeTransceiverMessage(
      prefix: BytesLike,
      sourceNttManagerAddress: BytesLike,
      recipientNttManagerAddress: BytesLike,
      nttManagerMessage: BytesLike,
      transceiverPayload: BytesLike,
      overrides?: CallOverrides
    ): Promise<[TransceiverStructs.TransceiverMessageStructOutput, string]>;

    decodeTransceiverInit(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [TransceiverStructs.TransceiverInitStructOutput] & {
        init: TransceiverStructs.TransceiverInitStructOutput;
      }
    >;

    decodeTransceiverRegistration(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [TransceiverStructs.TransceiverRegistrationStructOutput] & {
        registration: TransceiverStructs.TransceiverRegistrationStructOutput;
      }
    >;

    encodeNativeTokenTransfer(
      m: TransceiverStructs.NativeTokenTransferStruct,
      overrides?: CallOverrides
    ): Promise<[string] & { encoded: string }>;

    encodeNttManagerMessage(
      m: TransceiverStructs.NttManagerMessageStruct,
      overrides?: CallOverrides
    ): Promise<[string] & { encoded: string }>;

    encodeTransceiverInit(
      init: TransceiverStructs.TransceiverInitStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    encodeTransceiverInstruction(
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    encodeTransceiverInstructions(
      instructions: TransceiverStructs.TransceiverInstructionStruct[],
      overrides?: CallOverrides
    ): Promise<[string]>;

    encodeTransceiverMessage(
      prefix: BytesLike,
      m: TransceiverStructs.TransceiverMessageStruct,
      overrides?: CallOverrides
    ): Promise<[string] & { encoded: string }>;

    encodeTransceiverRegistration(
      registration: TransceiverStructs.TransceiverRegistrationStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    nttManagerMessageDigest(
      sourceChainId: BigNumberish,
      m: TransceiverStructs.NttManagerMessageStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    parseNativeTokenTransfer(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [TransceiverStructs.NativeTokenTransferStructOutput] & {
        nativeTokenTransfer: TransceiverStructs.NativeTokenTransferStructOutput;
      }
    >;

    parseNttManagerMessage(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [TransceiverStructs.NttManagerMessageStructOutput] & {
        nttManagerMessage: TransceiverStructs.NttManagerMessageStructOutput;
      }
    >;

    parseTransceiverAndNttManagerMessage(
      expectedPrefix: BytesLike,
      payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [
        TransceiverStructs.TransceiverMessageStructOutput,
        TransceiverStructs.NttManagerMessageStructOutput
      ]
    >;

    parseTransceiverInstructionChecked(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [TransceiverStructs.TransceiverInstructionStructOutput] & {
        instruction: TransceiverStructs.TransceiverInstructionStructOutput;
      }
    >;

    parseTransceiverInstructionUnchecked(
      encoded: BytesLike,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [TransceiverStructs.TransceiverInstructionStructOutput, BigNumber] & {
        instruction: TransceiverStructs.TransceiverInstructionStructOutput;
        nextOffset: BigNumber;
      }
    >;

    parseTransceiverInstructions(
      encoded: BytesLike,
      numEnabledTransceivers: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[TransceiverStructs.TransceiverInstructionStructOutput[]]>;
  };

  buildAndEncodeTransceiverMessage(
    prefix: BytesLike,
    sourceNttManagerAddress: BytesLike,
    recipientNttManagerAddress: BytesLike,
    nttManagerMessage: BytesLike,
    transceiverPayload: BytesLike,
    overrides?: CallOverrides
  ): Promise<[TransceiverStructs.TransceiverMessageStructOutput, string]>;

  decodeTransceiverInit(
    encoded: BytesLike,
    overrides?: CallOverrides
  ): Promise<TransceiverStructs.TransceiverInitStructOutput>;

  decodeTransceiverRegistration(
    encoded: BytesLike,
    overrides?: CallOverrides
  ): Promise<TransceiverStructs.TransceiverRegistrationStructOutput>;

  encodeNativeTokenTransfer(
    m: TransceiverStructs.NativeTokenTransferStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  encodeNttManagerMessage(
    m: TransceiverStructs.NttManagerMessageStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  encodeTransceiverInit(
    init: TransceiverStructs.TransceiverInitStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  encodeTransceiverInstruction(
    instruction: TransceiverStructs.TransceiverInstructionStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  encodeTransceiverInstructions(
    instructions: TransceiverStructs.TransceiverInstructionStruct[],
    overrides?: CallOverrides
  ): Promise<string>;

  encodeTransceiverMessage(
    prefix: BytesLike,
    m: TransceiverStructs.TransceiverMessageStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  encodeTransceiverRegistration(
    registration: TransceiverStructs.TransceiverRegistrationStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  nttManagerMessageDigest(
    sourceChainId: BigNumberish,
    m: TransceiverStructs.NttManagerMessageStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  parseNativeTokenTransfer(
    encoded: BytesLike,
    overrides?: CallOverrides
  ): Promise<TransceiverStructs.NativeTokenTransferStructOutput>;

  parseNttManagerMessage(
    encoded: BytesLike,
    overrides?: CallOverrides
  ): Promise<TransceiverStructs.NttManagerMessageStructOutput>;

  parseTransceiverAndNttManagerMessage(
    expectedPrefix: BytesLike,
    payload: BytesLike,
    overrides?: CallOverrides
  ): Promise<
    [
      TransceiverStructs.TransceiverMessageStructOutput,
      TransceiverStructs.NttManagerMessageStructOutput
    ]
  >;

  parseTransceiverInstructionChecked(
    encoded: BytesLike,
    overrides?: CallOverrides
  ): Promise<TransceiverStructs.TransceiverInstructionStructOutput>;

  parseTransceiverInstructionUnchecked(
    encoded: BytesLike,
    offset: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [TransceiverStructs.TransceiverInstructionStructOutput, BigNumber] & {
      instruction: TransceiverStructs.TransceiverInstructionStructOutput;
      nextOffset: BigNumber;
    }
  >;

  parseTransceiverInstructions(
    encoded: BytesLike,
    numEnabledTransceivers: BigNumberish,
    overrides?: CallOverrides
  ): Promise<TransceiverStructs.TransceiverInstructionStructOutput[]>;

  callStatic: {
    buildAndEncodeTransceiverMessage(
      prefix: BytesLike,
      sourceNttManagerAddress: BytesLike,
      recipientNttManagerAddress: BytesLike,
      nttManagerMessage: BytesLike,
      transceiverPayload: BytesLike,
      overrides?: CallOverrides
    ): Promise<[TransceiverStructs.TransceiverMessageStructOutput, string]>;

    decodeTransceiverInit(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<TransceiverStructs.TransceiverInitStructOutput>;

    decodeTransceiverRegistration(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<TransceiverStructs.TransceiverRegistrationStructOutput>;

    encodeNativeTokenTransfer(
      m: TransceiverStructs.NativeTokenTransferStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    encodeNttManagerMessage(
      m: TransceiverStructs.NttManagerMessageStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    encodeTransceiverInit(
      init: TransceiverStructs.TransceiverInitStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    encodeTransceiverInstruction(
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    encodeTransceiverInstructions(
      instructions: TransceiverStructs.TransceiverInstructionStruct[],
      overrides?: CallOverrides
    ): Promise<string>;

    encodeTransceiverMessage(
      prefix: BytesLike,
      m: TransceiverStructs.TransceiverMessageStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    encodeTransceiverRegistration(
      registration: TransceiverStructs.TransceiverRegistrationStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    nttManagerMessageDigest(
      sourceChainId: BigNumberish,
      m: TransceiverStructs.NttManagerMessageStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    parseNativeTokenTransfer(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<TransceiverStructs.NativeTokenTransferStructOutput>;

    parseNttManagerMessage(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<TransceiverStructs.NttManagerMessageStructOutput>;

    parseTransceiverAndNttManagerMessage(
      expectedPrefix: BytesLike,
      payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [
        TransceiverStructs.TransceiverMessageStructOutput,
        TransceiverStructs.NttManagerMessageStructOutput
      ]
    >;

    parseTransceiverInstructionChecked(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<TransceiverStructs.TransceiverInstructionStructOutput>;

    parseTransceiverInstructionUnchecked(
      encoded: BytesLike,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [TransceiverStructs.TransceiverInstructionStructOutput, BigNumber] & {
        instruction: TransceiverStructs.TransceiverInstructionStructOutput;
        nextOffset: BigNumber;
      }
    >;

    parseTransceiverInstructions(
      encoded: BytesLike,
      numEnabledTransceivers: BigNumberish,
      overrides?: CallOverrides
    ): Promise<TransceiverStructs.TransceiverInstructionStructOutput[]>;
  };

  filters: {};

  estimateGas: {
    buildAndEncodeTransceiverMessage(
      prefix: BytesLike,
      sourceNttManagerAddress: BytesLike,
      recipientNttManagerAddress: BytesLike,
      nttManagerMessage: BytesLike,
      transceiverPayload: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    decodeTransceiverInit(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    decodeTransceiverRegistration(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeNativeTokenTransfer(
      m: TransceiverStructs.NativeTokenTransferStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeNttManagerMessage(
      m: TransceiverStructs.NttManagerMessageStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeTransceiverInit(
      init: TransceiverStructs.TransceiverInitStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeTransceiverInstruction(
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeTransceiverInstructions(
      instructions: TransceiverStructs.TransceiverInstructionStruct[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeTransceiverMessage(
      prefix: BytesLike,
      m: TransceiverStructs.TransceiverMessageStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeTransceiverRegistration(
      registration: TransceiverStructs.TransceiverRegistrationStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    nttManagerMessageDigest(
      sourceChainId: BigNumberish,
      m: TransceiverStructs.NttManagerMessageStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    parseNativeTokenTransfer(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    parseNttManagerMessage(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    parseTransceiverAndNttManagerMessage(
      expectedPrefix: BytesLike,
      payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    parseTransceiverInstructionChecked(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    parseTransceiverInstructionUnchecked(
      encoded: BytesLike,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    parseTransceiverInstructions(
      encoded: BytesLike,
      numEnabledTransceivers: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    buildAndEncodeTransceiverMessage(
      prefix: BytesLike,
      sourceNttManagerAddress: BytesLike,
      recipientNttManagerAddress: BytesLike,
      nttManagerMessage: BytesLike,
      transceiverPayload: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    decodeTransceiverInit(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    decodeTransceiverRegistration(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeNativeTokenTransfer(
      m: TransceiverStructs.NativeTokenTransferStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeNttManagerMessage(
      m: TransceiverStructs.NttManagerMessageStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeTransceiverInit(
      init: TransceiverStructs.TransceiverInitStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeTransceiverInstruction(
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeTransceiverInstructions(
      instructions: TransceiverStructs.TransceiverInstructionStruct[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeTransceiverMessage(
      prefix: BytesLike,
      m: TransceiverStructs.TransceiverMessageStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeTransceiverRegistration(
      registration: TransceiverStructs.TransceiverRegistrationStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    nttManagerMessageDigest(
      sourceChainId: BigNumberish,
      m: TransceiverStructs.NttManagerMessageStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    parseNativeTokenTransfer(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    parseNttManagerMessage(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    parseTransceiverAndNttManagerMessage(
      expectedPrefix: BytesLike,
      payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    parseTransceiverInstructionChecked(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    parseTransceiverInstructionUnchecked(
      encoded: BytesLike,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    parseTransceiverInstructions(
      encoded: BytesLike,
      numEnabledTransceivers: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
