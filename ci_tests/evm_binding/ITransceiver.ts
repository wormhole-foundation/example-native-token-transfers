/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export declare namespace TransceiverStructs {
  export type TransceiverInstructionStruct = {
    index: BigNumberish;
    payload: BytesLike;
  };

  export type TransceiverInstructionStructOutput = [number, string] & {
    index: number;
    payload: string;
  };
}

export interface ITransceiverInterface extends utils.Interface {
  functions: {
    "quoteDeliveryPrice(uint16,(uint8,bytes))": FunctionFragment;
    "sendMessage(uint16,(uint8,bytes),bytes,bytes32)": FunctionFragment;
    "transferTransceiverOwnership(address)": FunctionFragment;
    "upgrade(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "quoteDeliveryPrice"
      | "sendMessage"
      | "transferTransceiverOwnership"
      | "upgrade"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "quoteDeliveryPrice",
    values: [BigNumberish, TransceiverStructs.TransceiverInstructionStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "sendMessage",
    values: [
      BigNumberish,
      TransceiverStructs.TransceiverInstructionStruct,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferTransceiverOwnership",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "upgrade", values: [string]): string;

  decodeFunctionResult(
    functionFragment: "quoteDeliveryPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sendMessage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferTransceiverOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "upgrade", data: BytesLike): Result;

  events: {};
}

export interface ITransceiver extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ITransceiverInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    quoteDeliveryPrice(
      recipientChain: BigNumberish,
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    sendMessage(
      recipientChain: BigNumberish,
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      nttManagerMessage: BytesLike,
      recipientNttManagerAddress: BytesLike,
      overrides?: PayableOverrides & { from?: string }
    ): Promise<ContractTransaction>;

    transferTransceiverOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    upgrade(
      newImplementation: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  quoteDeliveryPrice(
    recipientChain: BigNumberish,
    instruction: TransceiverStructs.TransceiverInstructionStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  sendMessage(
    recipientChain: BigNumberish,
    instruction: TransceiverStructs.TransceiverInstructionStruct,
    nttManagerMessage: BytesLike,
    recipientNttManagerAddress: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractTransaction>;

  transferTransceiverOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  upgrade(
    newImplementation: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    quoteDeliveryPrice(
      recipientChain: BigNumberish,
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    sendMessage(
      recipientChain: BigNumberish,
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      nttManagerMessage: BytesLike,
      recipientNttManagerAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    transferTransceiverOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    upgrade(
      newImplementation: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    quoteDeliveryPrice(
      recipientChain: BigNumberish,
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    sendMessage(
      recipientChain: BigNumberish,
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      nttManagerMessage: BytesLike,
      recipientNttManagerAddress: BytesLike,
      overrides?: PayableOverrides & { from?: string }
    ): Promise<BigNumber>;

    transferTransceiverOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    upgrade(
      newImplementation: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    quoteDeliveryPrice(
      recipientChain: BigNumberish,
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    sendMessage(
      recipientChain: BigNumberish,
      instruction: TransceiverStructs.TransceiverInstructionStruct,
      nttManagerMessage: BytesLike,
      recipientNttManagerAddress: BytesLike,
      overrides?: PayableOverrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    transferTransceiverOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    upgrade(
      newImplementation: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
